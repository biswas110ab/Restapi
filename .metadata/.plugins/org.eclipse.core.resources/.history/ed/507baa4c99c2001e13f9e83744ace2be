package OAuthPojo;

import static io.restassured.RestAssured.*;
import static io.restassured.matcher.RestAssuredMatchers.*;
import static org.hamcrest.Matchers.*;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.testng.Assert;
import org.testng.annotations.Test;

import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;


public class OAuth {

	@Test
	public void Auth() {
		// TODO Auto-generated method stub
		String a[]= {"Selenium Webdriver Java","Cypress","Protractor"};
		RestAssured.baseURI="https://rahulshettyacademy.com";
		String resp=given().log().all().formParam("client_id", "692183103107-p0m7ent2hk7suguv4vq22hjcfhcr43pj.apps.googleusercontent.com")
				.formParam("client_secret", "erZOWM9g3UtwNRj340YYaK_W").formParam("grant_type", "client_credentials").formParam("scope", "trust")
				.when().post("/oauthapi/oauth2/resourceOwner/token")
				.then().log().all()
				.extract().body().asString();
		System.out.println(resp);
		JsonPath js=new JsonPath(resp);
		String token=js.getString("access_token");
		System.out.println(token);
		// This will get as json as Java object 
		ResponsePojo gc = given().log().all().queryParam("access_token", token)
				.when().get("/oauthapi/getCourseDetails")
				.then().log().all().extract().body().as(ResponsePojo.class);
		System.out.println(gc.getLinkedIn());
		System.out.println(gc.getInstructor());

		System.out.println(gc.getCourses().getApi().get(1).getCourseTitle());
		ArrayList<String> expected=new ArrayList<String>();
		for(int i=0;i<gc.getCourses().getApi().size();i++)
		{
			if(gc.getCourses().getApi().get(i).getCourseTitle().equalsIgnoreCase("SoapUI Webservices testing"))
			{
				String price=gc.getCourses().getApi().get(i).getPrice();
				System.out.println(price);
				break;
			}
		}
		
		for(int i=0;i<gc.getCourses().getWebAutomation().size();i++)
		{
			
			expected.add(gc.getCourses().getWebAutomation().get(i).getCourseTitle());
		}
		
		List<String> b = Arrays.asList(a);
		Assert.assertTrue(b.equals(expected));
		
	}

}
